{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quiz-maker.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction QuizMakerComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", cat_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cat_r4.name);\n  }\n}\nfunction QuizMakerComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difficultyLevel_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(difficultyLevel_r5);\n  }\n}\nfunction QuizMakerComponent_div_12_div_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function QuizMakerComponent_div_12_div_2_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const answerIndex_r12 = restoredCtx.index;\n      const questionIndex_r9 = i0.ɵɵnextContext().index;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.selectAnswer(questionIndex_r9, answerIndex_r12));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const answer_r11 = ctx.$implicit;\n    const answerIndex_r12 = ctx.index;\n    const questionIndex_r9 = i0.ɵɵnextContext().index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"selected\", ctx_r10.isSelected(questionIndex_r9, answerIndex_r12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.sanitizeText(answer_r11), \" \");\n  }\n}\nfunction QuizMakerComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵtemplate(4, QuizMakerComponent_div_12_div_2_button_4_Template, 2, 3, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.sanitizeText(question_r8.question));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r8.answers);\n  }\n}\nfunction QuizMakerComponent_div_12_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function QuizMakerComponent_div_12_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.submitQuiz(ctx_r17.quizDetails));\n    });\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction QuizMakerComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 9);\n    i0.ɵɵtemplate(2, QuizMakerComponent_div_12_div_2_Template, 5, 2, \"div\", 10);\n    i0.ɵɵtemplate(3, QuizMakerComponent_div_12_div_3_Template, 3, 0, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.quizDetails);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedAnswers.length == 5);\n  }\n}\nexport let QuizMakerComponent = /*#__PURE__*/(() => {\n  class QuizMakerComponent {\n    //status:boolean=false\n    constructor(quizService, router) {\n      this.quizService = quizService;\n      this.router = router;\n      this.categories = [];\n      this.difficulties = ['Easy', 'medium', 'hard'];\n      this.quizDetails = [];\n      this.noQuestions = '';\n      this.questions = [];\n      this.toggle = false;\n      this.selectedButtonIndex = -1;\n      this.selectedRowIndex = -1;\n      this.selectedAnswers = [];\n    }\n    ngOnInit() {\n      this.getCategories();\n    }\n    getCategories() {\n      this.quizService.getQuizCategories().subscribe(res => {\n        const obj = JSON.parse(JSON.stringify(res));\n        this.categories = obj.trivia_categories;\n      });\n    }\n    createQuiz(inputParam) {\n      this.quizService.createQuiz(inputParam).subscribe(data => {\n        let obj = JSON.parse(JSON.stringify(data));\n        if (obj.results.length > 0) {\n          this.quizDetails = obj.results;\n          this.noQuestions = '';\n          console.log(this.quizDetails);\n          for (let i = 0; i < this.quizDetails.length; i++) {\n            this.quizDetails[i].answers = this.quizDetails[i].incorrect_answers;\n            this.quizDetails[i].answers.splice((this.quizDetails[i].answers.length + 1) * Math.random() | 0, 0, this.quizDetails[i].correct_answer);\n            this.questions.push(this.quizDetails[i].question);\n          }\n          console.log(this.quizDetails);\n        } else {\n          this.quizDetails = [];\n          this.noQuestions = 'No questions available for provided category and difficulty level';\n        }\n      });\n    }\n    clickEvent() {\n      // this.status=true;\n    }\n    selectAnswer(questionIndex, answerIndex) {\n      this.selectedAnswers[questionIndex] = answerIndex;\n    }\n    isSelected(questionIndex, answerIndex) {\n      return this.selectedAnswers[questionIndex] === answerIndex;\n    }\n    sanitizeText(text) {\n      const parser = new DOMParser();\n      let sanitizedString = '';\n      if (text != undefined && text != null) {\n        let decodedString = parser.parseFromString(text, \"text/html\").documentElement.textContent;\n        if (decodedString != null) sanitizedString = decodedString.replace(/&#?[a-z0-9]+;/gi, \"\");\n      }\n      return sanitizedString;\n    }\n    submitQuiz(quizDetails) {\n      let currect = 0;\n      let wrong = 0;\n      for (let i = 0; i < quizDetails.length; i++) {\n        let ansIndex = this.selectedAnswers[i];\n        quizDetails[i].selected_answer = quizDetails[i].answers[ansIndex];\n        if (quizDetails[i].answers[ansIndex] == quizDetails[i].correct_answer) {\n          currect++;\n        } else {\n          wrong++;\n        }\n      }\n      console.log(currect + \" ********* \" + wrong);\n      quizDetails[0].currect = currect;\n      quizDetails[0].wrong = wrong;\n      this.quizService.setQuizData(quizDetails);\n      this.router.navigate(['/quiz-result']);\n    }\n  }\n  QuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n    return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizMakerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  QuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuizMakerComponent,\n    selectors: [[\"app-quiz-maker\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[\"novalidate\", \"\", 3, \"submit\"], [\"myForm\", \"ngForm\"], [\"name\", \"categorySelect\", \"id\", \"categorySelect\", \"placeholder\", \"Select a Category\", \"ngModel\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"difficultySelect\", \"id\", \"difficultySelect\", \"ngModel\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"id\", \"createBtn\"], [4, \"ngIf\"], [3, \"value\"], [1, \"quiz-container\"], [\"class\", \"quiz-question\", 4, \"ngFor\", \"ngForOf\"], [1, \"quiz-question\"], [1, \"quiz-answer\", \"inner\", \"button\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"type\", \"submit\", 3, \"click\"]],\n    template: function QuizMakerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r19 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"QUIZ MAKER\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\")(4, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function QuizMakerComponent_Template_form_submit_4_listener() {\n          i0.ɵɵrestoreView(_r19);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.createQuiz(_r0.value));\n        });\n        i0.ɵɵelementStart(6, \"select\", 2);\n        i0.ɵɵtemplate(7, QuizMakerComponent_option_7_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4);\n        i0.ɵɵtemplate(9, QuizMakerComponent_option_9_Template, 2, 1, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Create\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, QuizMakerComponent_div_12_Template, 4, 2, \"div\", 7);\n        i0.ɵɵelementContainerStart(13);\n        i0.ɵɵelementStart(14, \"span\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.difficulties);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.quizDetails.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.noQuestions);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm]\n  });\n  return QuizMakerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}