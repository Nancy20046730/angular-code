{"ast":null,"code":"import { QuizMakerService } from '../services/quiz-maker.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quiz-maker.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction QuizMakerComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", cat_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cat_r4.name);\n  }\n}\nfunction QuizMakerComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difficultyLevel_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(difficultyLevel_r5);\n  }\n}\nfunction QuizMakerComponent_div_12_ng_container_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function QuizMakerComponent_div_12_ng_container_2_div_4_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const indexOfelement_r11 = restoredCtx.index;\n      const questionIndex_r8 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.enableDisableRule(indexOfelement_r11, questionIndex_r8));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r10 = ctx.$implicit;\n    const indexOfelement_r11 = ctx.index;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", indexOfelement_r11);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.isSelected(indexOfelement_r11) ? \"green\" : \"red\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r10, \" \");\n  }\n}\nfunction QuizMakerComponent_div_12_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtemplate(4, QuizMakerComponent_div_12_ng_container_2_div_4_Template, 3, 3, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const obj_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", obj_r7.question, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", obj_r7.answers);\n  }\n}\nfunction QuizMakerComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, QuizMakerComponent_div_12_ng_container_2_Template, 5, 2, \"ng-container\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.quizDetails);\n  }\n}\nexport class QuizMakerComponent {\n  //status:boolean=false\n  constructor(quizService) {\n    this.quizService = quizService;\n    this.categories = [];\n    this.difficulties = ['Easy', 'medium', 'hard'];\n    this.quizDetails = [];\n    this.noQuestions = '';\n    this.toggle = false;\n    // status:string = 'Enable'; \n    // enableDisableRule() {\n    //   debugger;\n    //  // console.log(event)\n    //    // = !this.toggle;\n    //    // this.status = this.toggle ? 'Enable' : 'Disable';\n    // }\n    this.selectedButtonIndex = 0;\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.quizService.getQuizCategories().subscribe(res => {\n      const obj = JSON.parse(JSON.stringify(res));\n      this.categories = obj.trivia_categories;\n    });\n  }\n  createQuiz(inputParam) {\n    this.quizService.createQuiz(inputParam).subscribe(data => {\n      let obj = JSON.parse(JSON.stringify(data));\n      if (obj.results.length > 0) {\n        this.quizDetails = obj.results;\n        this.noQuestions = '';\n        console.log(this.quizDetails);\n        for (let i = 0; i < this.quizDetails.length; i++) {\n          this.quizDetails[i].answers = this.quizDetails[i].incorrect_answers;\n          this.quizDetails[i].answers.splice((this.quizDetails[i].answers.length + 1) * Math.random() | 0, 0, this.quizDetails[i].correct_answer);\n        }\n        console.log(this.quizDetails);\n      } else {\n        debugger;\n        this.quizDetails = [];\n        this.noQuestions = 'No questions available for provided category and difficulty level';\n      }\n    });\n  }\n  clickEvent() {\n    // this.status=true;\n  }\n  enableDisableRule(ansIndex, qtnIndex) {\n    this.selectedButtonIndex = index;\n  }\n  isSelected(index) {\n    return this.selectedButtonIndex === index;\n  }\n}\nQuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n  return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizMakerService));\n};\nQuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizMakerComponent,\n  selectors: [[\"app-quiz-maker\"]],\n  features: [i0.ɵɵProvidersFeature([QuizMakerService])],\n  decls: 16,\n  vars: 4,\n  consts: [[\"novalidate\", \"\", 3, \"submit\"], [\"myForm\", \"ngForm\"], [\"name\", \"categorySelect\", \"id\", \"categorySelect\", \"placeholder\", \"Select a Category\", \"ngModel\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"difficultySelect\", \"id\", \"difficultySelect\", \"ngModel\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"id\", \"createBtn\"], [4, \"ngIf\"], [3, \"value\"], [\"class\", \"inner button\", 4, \"ngFor\", \"ngForOf\"], [1, \"inner\", \"button\"], [3, \"id\", \"ngClass\", \"click\"]],\n  template: function QuizMakerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r15 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"QUIZ MAKER\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\")(4, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function QuizMakerComponent_Template_form_submit_4_listener() {\n        i0.ɵɵrestoreView(_r15);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.createQuiz(_r0.value));\n      });\n      i0.ɵɵelementStart(6, \"select\", 2);\n      i0.ɵɵtemplate(7, QuizMakerComponent_option_7_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 4);\n      i0.ɵɵtemplate(9, QuizMakerComponent_option_9_Template, 2, 1, \"option\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \"Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(12, QuizMakerComponent_div_12_Template, 3, 1, \"div\", 7);\n      i0.ɵɵelementContainerStart(13);\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.difficulties);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.quizDetails.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.noQuestions);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["QuizMakerService","i0","QuizMakerComponent","constructor","quizService","ngOnInit","getCategories","getQuizCategories","subscribe","res","obj","JSON","parse","stringify","categories","trivia_categories","createQuiz","inputParam","data","results","length","quizDetails","noQuestions","console","log","i","answers","incorrect_answers","splice","Math","random","correct_answer","clickEvent","enableDisableRule","ansIndex","qtnIndex","selectedButtonIndex","index","isSelected","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Angular-certification-level-2\\quiz-maker\\src\\app\\quiz-maker\\quiz-maker.component.ts","D:\\Angular-certification-level-2\\quiz-maker\\src\\app\\quiz-maker\\quiz-maker.component.html"],"sourcesContent":["import { Component ,OnInit} from '@angular/core';\nimport { QuizMakerService } from '../services/quiz-maker.service';\nimport { Category } from '../models/category';\nimport { Quiz } from '../models/quiz';\nimport { QuizDetails } from '../models/quizDetails';\n@Component({\n  selector: 'app-quiz-maker',\n  templateUrl: './quiz-maker.component.html',\n  styleUrls: ['./quiz-maker.component.css'],\n  providers: [QuizMakerService]\n})\nexport class QuizMakerComponent implements OnInit {\n\n  categories:Category[]=[];\n  difficulties:string[]=['Easy','medium','hard'];\n  quizDetails:QuizDetails[]=[];\n  noQuestions:string='';\n \n  //status:boolean=false\n  constructor(private quizService:QuizMakerService){}\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n  getCategories():void{\n    this.quizService.getQuizCategories().subscribe(\n        res => {\n          const obj = JSON.parse(JSON.stringify(res));\n            this.categories =  obj.trivia_categories;\n        }\n    );\n}\ncreateQuiz(inputParam:Quiz){\n\n  this.quizService.createQuiz(inputParam)\n      .subscribe(data => {\n       let obj=JSON.parse(JSON.stringify(data));\n       if(obj.results.length>0){\n        this.quizDetails=obj.results;\n        this.noQuestions='';\n        console.log(this.quizDetails)\n        for(let i=0;i<this.quizDetails.length;i++){\nthis.quizDetails[i].answers=this.quizDetails[i].incorrect_answers;\nthis.quizDetails[i].answers.splice((this.quizDetails[i].answers.length+1) * Math.random() | 0, 0, this.quizDetails[i].correct_answer)\n\n        }\n        console.log(this.quizDetails)\n       }\n       else{\n        debugger;\n        this.quizDetails=[];\n        this.noQuestions='No questions available for provided category and difficulty level';\n       }\n       \n      })  ;\n\n}\nclickEvent():void{\n // this.status=true;\n}\ntoggle :boolean= false;\n// status:string = 'Enable'; \n\n// enableDisableRule() {\n//   debugger;\n//  // console.log(event)\n//    // = !this.toggle;\n//    // this.status = this.toggle ? 'Enable' : 'Disable';\n// }\n\nselectedButtonIndex: number=0;\n\nenableDisableRule(ansIndex: number,qtnIndex:number) {\n  this.selectedButtonIndex = index;\n}\n\nisSelected(index: number): boolean {\n  return this.selectedButtonIndex === index;\n}\n}\n","<div>\n    <h2>QUIZ MAKER</h2>\n    <div>\n      <form #myForm=\"ngForm\" (submit)=\"createQuiz(myForm.value)\" novalidate>\n        <select name=\"categorySelect\" id=\"categorySelect\" placeholder=\"Select a Category\" ngModel>\n          <option *ngFor=\"let cat of categories\" value=\"{{cat.id}}\">{{cat.name}}</option>\n        </select>\n          <select name=\"difficultySelect\" id=\"difficultySelect\" ngModel>\n            <option *ngFor=\"let difficultyLevel of difficulties\">{{difficultyLevel}}</option>\n          </select><button type=\"submit\" id=\"createBtn\" >Create</button>\n          </form>\n    </div>\n    <div *ngIf=\"quizDetails.length>0\">\n      <ul>\n        <ng-container *ngFor=\"let obj of quizDetails; let questionIndex = index;\">\n          <li>\n         {{ obj.question }}<br>\n          <div class=\"inner button\" *ngFor=\"let answer of obj.answers; let indexOfelement = index;\">\n            <button id=\"{{indexOfelement}}\" (click)=\"enableDisableRule(indexOfelement,questionIndex)\" [ngClass]=\"isSelected(indexOfelement) ? 'green' : 'red'\">\n              {{answer}}\n            </button>\n          </div>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ng-container>\n      <span>{{noQuestions}}</span>\n    </ng-container>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}